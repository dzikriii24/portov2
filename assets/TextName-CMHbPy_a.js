import{r as a,j as x,m as T}from"./index-DTphxLe8.js";const A=(n,l)=>{const u=new Set([...Object.keys(n),...l.flatMap(t=>Object.keys(t))]),r={};return u.forEach(t=>{r[t]=[n[t],...l.map(c=>c[t])]}),r},K=({text:n="",delay:l=200,className:u="",animateBy:r="words",direction:t="top",threshold:c=.1,rootMargin:m="0px",animationFrom:w,animationTo:h,easing:d=o=>o,onAnimationComplete:j,stepDuration:v=.35})=>{const o=r==="words"?n.split(" "):n.split(""),[g,E]=a.useState(!1),i=a.useRef(null);a.useEffect(()=>{if(!i.current)return;const s=new IntersectionObserver(([e])=>{e.isIntersecting&&(E(!0),s.unobserve(i.current))},{threshold:c,rootMargin:m});return s.observe(i.current),()=>s.disconnect()},[c,m]);const S=a.useMemo(()=>t==="top"?{filter:"blur(10px)",opacity:0,y:-50}:{filter:"blur(10px)",opacity:0,y:50},[t]),k=a.useMemo(()=>[{filter:"blur(5px)",opacity:.5,y:t==="top"?5:-5},{filter:"blur(0px)",opacity:1,y:0}],[t]),f=w??S,y=h??k,p=y.length+1,I=v*(p-1),N=Array.from({length:p},(s,e)=>p===1?0:e/(p-1));return x.jsx("p",{ref:i,className:`blur-text ${u} flex flex-wrap`,children:o.map((s,e)=>{const O=A(f,y),b={duration:I,times:N,delay:e*l/1e3};return b.ease=d,x.jsxs(T.span,{className:"inline-block will-change-[transform,filter,opacity]",initial:f,animate:g?O:f,transition:b,onAnimationComplete:e===o.length-1?j:void 0,children:[s===" "?" ":s,r==="words"&&e<o.length-1&&" "]},e)})})};export{K as default};
